<% provide(:title, @project.name) %>
<div class="row" style="margin-top: 10px;">
  <div class="col-lg-6 col-md-6 col-sm-12 col-xs-12">
    <div>
      <button id="prev">Previous</button>
      <button id="next">Next</button>
      &nbsp; &nbsp;
      <span>Page: <span id="page_num"></span> / <span id="page_count"></span></span>
    </div>
    <div id="pdfContainer" class="pdf-content">
    </div>
  </div>
  <div class="col-lg-6 col-md-6 col-sm-12 col-lg-12">
    <div class="row">
      <div class="col-lg-6 col-md-6 col-sm-6 col-lg-6 text-left">
        <b>Dossier:</b><%= @project.name %>
      </div>
      <div class="col-lg-6 col-md-6 col-sm-6 col-lg-6 text-center">
        <%= image_tag "pdp.jpg", style: "height: 50px; width:60px" %>
      </div>
      <div class="col-lg-12 col-md-12 col-sm-12 col-lg-12 text-right" style="margin-top: 25px; min-height: 400px">
        <div class="row">
          <div class="col-lg-2 col-md-2 col-sm-2 col-lg-2">
            <div class="row">
              <div class="col-lg-12 text-left"><strong>Action</strong></div>
              <div class="col-md-12 text-left" style="list-style: none; border: 1px solid black;margin-left: 15px;margin-top: 10px;padding-bottom: 5px;">
                <div class="row">
                  <div class="col-lg-12" style="padding-top:5px; padding-bottom:5px; background-color: #40C7DB">Modification</div>
                  <div class="col-lg-12" style="margin-top:5px">Suppression</div>
                  <div class="col-lg-12" style="margin-top:5px">Insertion</div>
                  <div class="col-lg-12" style="margin-top:5px">Remplacement</div>
                  <div class="col-lg-12" style="margin-top:5px">Commentaire</div>
                </div>
              </div>
            </div>
          </div>
          <div class="col-lg-10 col-md-10 col-sm-10 col-lg-10">
            <div class="row">
              <div class=" col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="row">
                  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-left" style="padding-left: 50px; padding-right: 50px">
                    <%= form_for(@correction) do |f| %>
                        <div class="form-group">
                          <%= f.label "Avant" %>
                          <%= f.text_field :avant, class: "form-control", :style => "width: 200px" %>
                        </div>
                        <div class="form-group">
                          <%= f.label "Texte demande" %>
                          <%= f.text_area :demande, class: "form-control" %>
                        </div>
                        <div class="form-group">
                          <%= f.label "Description" %>
                          <%= f.text_area :description, class: "form-control" %>
                        </div>
                        <div class="form-group">
                          <%= f.submit "Ajouter", class: "btn btn-default" %>
                        </div>
                    <% end %>
                    <%= link_to 'Liste des projets', projects_path, class: "link" %>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div id="corrections_space" class="col-lg-12 col-md-12 col-sm-12 col-lg-12 text-left" style="margin-top: 25px;max-height: 200px;overflow-y: scroll">
        <%= render "corrections/corrections" %>
      </div>
    </div>
  </div>
</div>
<script>
    function yourFunction() {
        if (window.getSelection) {
            var selectionRange = window.getSelection();
            $('#correction_avant').val(selectionRange.toString());
        }
    }
    $('#corps').click(function () {
        yourFunction();
    });

</script>
<script>
    var pdfDoc = null,
            pageNum = 11,
            pageRendering = false,
            pageNumPending = null,
            scale = 1.5;
    var url = "<%= @project.fichier.url %>";

    $(function () {
        loadPdf(url);
    });
    function loadPdf(url) {
        PDFJS.disableWorker = true;
        PDFJS.getDocument(url).then(function (pdfDoc_) {
            pdfDoc = pdfDoc_;
            $('#page_count').text(pdfDoc.numPages);
            $('#page_num').text(pageNum);

            renderPage(pageNum);
        });
    }
    //    function renderPdf(pdf) {
    //        pdf.getPage(pageNum).then(renderPage);
    //    }
    function renderPage(num) {
        pageRendering = false;
        // Using promise to fetch the page
        pdfDoc.getPage(num).then(function (page) {
            var viewport = page.getViewport(scale);
            var $canvas = jQuery("<canvas></canvas>");

            var canvas = $canvas.get(0);
            var context = canvas.getContext("2d");
            canvas.height = viewport.height;
            canvas.width = viewport.width;

            var $pdfContainer = jQuery("#pdfContainer");
            $pdfContainer.html("");
            $pdfContainer.css("height", canvas.height + "px").css("width", canvas.width + "px");
            $pdfContainer.append($canvas);

            var outputScale = getOutputScale();
            if (outputScale.scaled) {
                var cssScale = 'scale(' + (1 / outputScale.sx) + ', ' +
                        (1 / outputScale.sy) + ')';
                CustomStyle.setProp('transform', canvas, cssScale);
                CustomStyle.setProp('transformOrigin', canvas, '0% 0%');

                if ($textLayerDiv.get(0)) {
                    CustomStyle.setProp('transform', $textLayerDiv.get(0), cssScale);
                    CustomStyle.setProp('transformOrigin', $textLayerDiv.get(0), '0% 0%');
                }
            }
            context._scaleX = outputScale.sx;
            context._scaleY = outputScale.sy;
            if (outputScale.scaled) {
                context.scale(outputScale.sx, outputScale.sy);
            }

            var canvasOffset = $canvas.offset();
            var $textLayerDiv = jQuery("<div />")
                    .addClass("textLayer")
                    .css("height", viewport.height + "px")
                    .css("width", viewport.width + "px")
                    .offset({
                        top: canvasOffset.top,
                        left: canvasOffset.left
                    });

//
            $pdfContainer.append($textLayerDiv);

            page.getTextContent().then(function (textContent) {
                //var textLayer = new TextLayerBuilder($textLayerDiv.get(0), 0); //The second zero is an index identifying
                var textLayer = new TextLayerBuilder($textLayerDiv.get(0), pageNum - 1); //The second zero is an index identifying
                //the page. It is set to page.number - 1.
                textLayer.setTextContent(textContent);

                var renderContext = {
                    canvasContext: context,
                    viewport: viewport,
                    textLayer: textLayer
                };

                var renderTask = page.render(renderContext);
                renderTask.promise.then(function () {
                    pageRendering = false;
                    if (pageNumPending !== null) {
                        // New page rendering is pending
                        renderPage(pageNumPending);
                        pageNumPending = null;
                    }
                });
            });

            // Render PDF page into canvas context
            var renderContext = {
                canvasContext: ctx,
                viewport: viewport
            };
        });
        $('#page_num').text(pageNum);
    }
    function queueRenderPage(num) {
        if (pageRendering) {
            pageNumPending = num;
        } else {
//            renderPage(num);
            loadPdf(url);
        }
    }

    /**
     * Displays previous page.
     */
    function onPrevPage() {
        if (pageNum <= 1) {
            return;
        }
        pageNum--;
        queueRenderPage(pageNum);
    }
    $('#prev').on('click', onPrevPage);

    /**
     * Displays next page.
     */
    function onNextPage() {
        if (pageNum >= pdfDoc.numPages) {
            return;
        }
        pageNum++;
        queueRenderPage(pageNum);
    }
    $('#next').on('click', onNextPage);
</script>